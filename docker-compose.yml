  version: '3.7'

  services:

    # Spring Boot Java application
    spring-boot-app:
      build: ./spring-boot-app # Path to your Spring Boot project
      ports:
        - "8080:8080"
      depends_on:
        - postgresdb

    # Gin Golang application
    gin-golang-app:
      build: ./gin-golang-app # Path to your Golang Gin project
      ports:
        - "8081:8081"
      depends_on:
        - postgresdb

    # Django Python application
    flask-python-app:
      build: ./flask-python-app # Path to your Django project
      ports:
        - "8082:8082"
      depends_on:
        - postgresdb

    # PostgreSQL database service
    postgresdb:
      build: ./postgresdb # Building the PostgreSQL image from the local directory
      environment:
        POSTGRES_USER: root
        POSTGRES_PASSWORD: root
        POSTGRES_DB: mydatabase
      volumes:
        - postgres_data:/var/lib/postgresql/data
        
    # React Frontend
    react-frontend:
      build:
        context: ./frontend
        dockerfile: Dockerfile
      ports:
        - "80:80"
      container_name: react-frontend-container
      restart: unless-stopped

    # Ansible and Terraform
    ansible-terraform:
      build:
        context: .
        dockerfile: Dockerfile
      volumes:
        - ./workspace:/workspace
        - ./ansible:/ansible
      environment:
        AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
        AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      stdin_open: true
      tty: true

  volumes:
    postgres_data: # Named volume for Postgres data
